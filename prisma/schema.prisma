// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Clients {
  id String @id @default(cuid())
  email String @unique
  name String
  password String?
  plan String @default("free")

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations 
  accounts ClientAccount[]
  app App[]

  @@map("clients")
}

model Users {
  id String @id @default(cuid())
  appId String

  email String
  name String
  emailVerified Boolean @default(false)
  password String?

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  account UserAccount[]
  app App @relation(fields: [appId], references: [id])

 // validation
  @@unique([email, appId])
  @@map("users")
}

model ClientAccount {
  id String @id @default(cuid())
  clientId String
  provider String
  providerAccountId String

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  client Clients @relation(fields: [clientId], references: [id])

  @@unique([provider, providerAccountId], name: "provider_providerAccountId")
  @@unique([clientId, providerAccountId], name: "clientId_providerAccountId")
  @@map("client_accounts")
}

model UserAccount {
  id String @id @default(cuid())
  userId String
  provider String
  providerAccountId String

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Users @relation(fields: [userId], references: [id])
  
  @@unique([provider, providerAccountId])
  @@unique([userId, providerAccountId])
  @@map("user_accounts")
}

model App {
  id String @id @default(cuid())
  clientId String
  name String
  description String?

  // Auth settings
  jwtSecret String @unique
  jwtExpiresIn String @default("24h")

  // OAuth settings
  allowedProviders String[] @default(["google", "github", "local"])

  // Metadata
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  //Relations
  client Clients @relation(fields: [clientId], references: [id])
  users Users[]

  @@unique([clientId, name])
  @@map("apps")
}

